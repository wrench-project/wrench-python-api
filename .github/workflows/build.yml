name: Build

on:
  push:
    branches:
      - main

jobs:
  run-tests-and-examples:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.11 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install wrench-daemon
        run: |
          cd /tmp/
          pip install jsonref
          sudo apt-get update
          sudo apt-get -y install gcc
          sudo apt-get -y install libasio-dev
          sudo apt-get -y install libboost-all-dev
          wget https://github.com/nlohmann/json/archive/refs/tags/v3.10.5.tar.gz
          tar -xf v3.10.5.tar.gz
          cd json-3.10.5
          cmake .
          make -j4
          sudo make install
          cd ..
          wget --no-check-certificate https://framagit.org/simgrid/simgrid/-/archive/v3.36/simgrid-v3.36.tar.gz
          tar -xf simgrid-v3.36.tar.gz
          cd simgrid-v3.36
          cmake -Denable_documentation=OFF -Denable_smpi=OFF .
          make -j4
          sudo make install
          cd ..
          git clone https://github.com/wrench-project/wrench.git
          cd wrench
          cmake .
          make -j4 wrench-daemon
          sudo make install
          cd ..
          cd
          # WITH DOCKER BELOW
          #curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          #sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          #sudo apt-get update
          #sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          #docker pull wrenchproject/wrench:unstable
      - name: Start wrench-daemon
        run: |
          echo "LD_LIBRARY_PATH=/usr/local/lib/" >> $GITHUB_ENV
          wrench-daemon &
          #docker run -p 8101:8101 wrenchproject/wrench:unstable wrench-daemon &
          echo "PID=$!" >> $GITHUB_ENV
      - name: Install the wrench Python API
        run: |
          pip install .
      - name: Run all tests
        run: |
          cd tests
          bash ./run_all_tests.sh
          cd ..
      - name: Run all examples
        run: |
          cd examples
          bash ./run_all_examples.sh
          cd ..
      - name: Kill wrench-daemon
        run: |
          kill ${{ env.PID }} || true
  build-documentation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.11 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt-get install -y python3-sphinx sphinx-rtd-theme-common
          pip install sphinx-rtd-theme
          pip install sphinx_rtd_theme recommonmark
      - name: Check package install
        run: |
          pip install .
      - name: Build documentation
        run: |
          cd docs
          make html
